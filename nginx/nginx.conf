map $host $enable_healthcheck_log {
  default ${NG_LOG_HEALTH_CHECKS};
}

upstream frontend-srv {
    server ${APP_SERVER_ADDR}:${APP_SERVER_PORT};
}

upstream backend-srv {
    server ${API_SERVER_ADDR}:${API_SERVER_PORT};
}

# Globally enables logging of rewrite actions
rewrite_log on;

server {
  listen 80;

  location / {
    proxy_pass http://frontend-srv/;
  }

  location /api/ {
    # Removes extra /api segment from API requests
    # before sending it to the upstream api server
    rewrite ^/api/(.*)$ /$1 break;
    proxy_pass http://backend-srv/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # Sets error logs at notice level to include rewrite logs
    error_log /var/log/nginx/error.log notice;
  }

  # All Backend related locations: /admin /assets /uploads /i18n...
  # todo: isolate uploads path with custom handler
  location ~ ^/($NG_BACKEND_URLS/?.*)$ {
    proxy_pass http://backend-srv/$1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location /health-check {
    add_header Content-Type text/plain;
    return 200 "success";
    # Access logs for health-check endpoint 
    # go directly to stdout (rendered in 'minimal' format)
    access_log /dev/stdout minimal if=$enable_healthcheck_log;
  }

  # Redirects server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }  

}
