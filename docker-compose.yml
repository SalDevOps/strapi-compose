version: "3"

services:

  proxy:
    build: nginx
    image: nginx-proxy
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/tmp/template.conf
    environment: 
      - API_SERVER_ADDR=strapi
      - API_SERVER_PORT=1337
      # Logging health-checks.
      - NG_LOG_HEALTH_CHECKS=1
    ports:
      - "80:80"
    networks:
      - strapi-stack


  backend:
    build:
      context: .
      dockerfile: strapi/Dockerfile
      args:
        - STRAPI_IMAGE
        - STRAPI_IMAGE_TAG
        - STRAPI_TEMPLATE_URL
        - GITHUB_TOKEN_FILE_PATH
    image: strapi-backend
    container_name: strapi
    restart: unless-stopped
    environment:
      - DATABASE_CLIENT=postgres
      - DATABASE_NAME
      - DATABASE_HOST
      - DATABASE_PORT
      - DATABASE_USERNAME
      - DATABASE_PASSWORD
    networks:
      - strapi-stack
    depends_on:
      - db
    volumes:
      - ${PWD}/template:/var/local/template
    ports:
      - "1337:1337"

  db:
    image: postgres:14-alpine
    container_name: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    secrets:
      - db-password
    networks:
      - strapi-stack
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    
volumes:
  db-data:
    name: strapi-db-data
secrets:
  db-password:
    file: config/dbPassword.key
networks:
  strapi-stack:
    name: strapi-stack
    driver: bridge
